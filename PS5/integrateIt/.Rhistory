devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::as.package("integrateIt")
getwd()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
roxygen2::roxygenize()
devtools::check()
devtools::check()
devtools::as.package()
devtools::as.package(".")
packtest <- devtools::as.package(".")
devtools::load_all()
test <- function(x){x^2}
test <- function(x){return(x^2)}
n <- 10
ab <- c(0,10)
integrateIt(n,test,ab,"Trapezoid")
a <- integrateIt(n,test,ab,"Trapezoid")
print(a)
print(a$Integral_object)
integrateIt(n,test,ab,"Trapezoid")
print(a[[1]])
a$Integral_object
getwd()
## This can be run many times as the code is updates
current.code <- as.package("integrateIt")
#set wd
setwd("C:/Users/jordo/Documents/GitHub/AppliedStatisticalProgramming2022/integrateIt/integrateIt")
## This can be run many times as the code is updates
current.code <- as.package("integrateIt")
## Load libraries
library(devtools)
library(roxygen2)
#set wd
setwd("C:/Users/jordo/Documents/GitHub/AppliedStatisticalProgramming2022/integrateIt/integrateIt")
## This can be run many times as the code is updates
current.code <- as.package("integrateIt")
#set wd
setwd("C:/Users/jordo/Documents/GitHub/AppliedStatisticalProgramming2022/integrateIt/")
## This can be run many times as the code is updates
current.code <- as.package("integrateIt")
#set wd
setwd("C:/Users/jordo/Documents/GitHub/AppliedStatisticalProgramming2022/")
## This can be run many times as the code is updates
current.code <- as.package("integrateIt")
check(current.code)
load_all(current.code)
document(current.code)
## Check to see if help files are working
?integrateIt
## Check to see if help files are working
??integrateIt
## Check to see if help files are working
?integrateIt
?tolTest
test.trap <- integrateIt(n,test.f,ab,"Trapezoid")
## Test the function
test.f <- function(x) {return(x^2-5)
}
n <- 10
ab <- c(0,10)
test.trap <- integrateIt(n,test.f,ab,"Trapezoid")
test.trap
print(test.trap$Integral_object)
#Test the second
test.simpson <- integrateIt(n,test.f,ab,"Simpson")
#See the results
test.simpson
#See the results
test.trap
#Check the print method
print(test.simpson$Integral_object)
## Check to see if help files are working
?integrateIt
n <- 100
ab <- c(0,100)
#Test the first
test.trap <- integrateIt(n,test.f,ab,"Trapezoid")
#See the results
test.trap
#Check if the print method is working
print(test.trap$Integral_object)
#Test the second
test.simpson <- integrateIt(n,test.f,ab,"Simpson")
#Check the print method
print(test.simpson$Integral_object)
## Check to see if help files are working
?"Trapezoid"
## Check to see if help files are working
?integrate
## Check to see if help files are working
?integrateIt
## Load libraries
library(devtools)
library(roxygen2)
## Verify the package and update documentation
current.code <- as.package("integrateIt")
#set wd
setwd("C:/Users/jordo/Documents/GitHub/AppliedStatisticalProgramming2022/PS5")
## Verify the package and update documentation
current.code <- as.package("integrateIt")
#set wd
setwd("C:/Users/jordo/Documents/GitHub/AppliedStatisticalProgramming2022/")
## Verify the package and update documentation
current.code <- as.package("integrateIt")
